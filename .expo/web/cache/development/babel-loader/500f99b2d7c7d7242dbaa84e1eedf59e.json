{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNative\\\\test\\\\context\\\\AuthContext.js\";\n\nimport React, { useReducer } from \"react\";\nexport var initialState = {\n  authenticated: false\n};\nexport var loginReducer = function loginReducer(state, action) {\n  switch (action.type) {\n    case \"SIGNUP\":\n      return {\n        authenticated: true,\n        payload: action.payload\n      };\n\n    case \"SIGNIN\":\n      return {\n        authenticated: true,\n        payload: action.payload\n      };\n\n    case \"SIGNOUT\":\n      return {\n        authenticated: false\n      };\n\n    case \"GET_AUTH_STATE\":\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport var AuthContext = React.createContext();\n\nvar AuthContextProvider = function AuthContextProvider(props) {\n  var _useReducer = useReducer(loginReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/context/AuthContext.js"],"names":["React","useReducer","initialState","authenticated","loginReducer","state","action","type","payload","AuthContext","createContext","AuthContextProvider","props","dispatch","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,aAAa,EAAE;AADW,CAArB;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAO;AAAEJ,QAAAA,aAAa,EAAE,IAAjB;AAAuBK,QAAAA,OAAO,EAAEF,MAAM,CAACE;AAAvC,OAAP;;AACF,SAAK,QAAL;AACE,aAAO;AAAEL,QAAAA,aAAa,EAAE,IAAjB;AAAuBK,QAAAA,OAAO,EAAEF,MAAM,CAACE;AAAvC,OAAP;;AACF,SAAK,SAAL;AACE,aAAO;AAAEL,QAAAA,aAAa,EAAE;AAAjB,OAAP;;AACF,SAAK,gBAAL;AACE,aAAOE,KAAP;;AACF;AACE,aAAOA,KAAP;AAVJ;AAYD,CAbM;AAeP,OAAO,IAAMI,WAAW,GAAGT,KAAK,CAACU,aAAN,EAApB;;AAEP,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrC,oBAA0BX,UAAU,CAACG,YAAD,EAAeF,YAAf,CAApC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcQ,QAAd;;AAEA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAER,MAAAA,KAAK,EAALA,KAAF;AAASQ,MAAAA,QAAQ,EAARA;AAAT,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADF;AAKD,CARD;;AAUA,eAAeH,mBAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nexport const initialState = {\r\n  authenticated: false,\r\n};\r\n\r\nexport const loginReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SIGNUP\":\r\n      return { authenticated: true, payload: action.payload };\r\n    case \"SIGNIN\":\r\n      return { authenticated: true, payload: action.payload };\r\n    case \"SIGNOUT\":\r\n      return { authenticated: false };\r\n    case \"GET_AUTH_STATE\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(loginReducer, initialState);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ state, dispatch }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}