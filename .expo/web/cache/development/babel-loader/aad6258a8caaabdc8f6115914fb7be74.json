{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNative\\\\test\\\\components\\\\ImagePicker.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as MediaLibrary from 'expo-media-library';\nimport Colors from \"../constants/Colors\";\n\nvar ImgPicker = function ImgPicker(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedImage = _useState2[0],\n      setPickedImage = _useState2[1];\n\n  var verifyPermissions = function verifyPermissions() {\n    var reponse;\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(MediaLibrary.requestPermissionsAsync(MediaLibrary.CameraRollPermissionResponse));\n\n          case 2:\n            reponse = _context.sent;\n\n            if (!(reponse.status !== \"granted\")) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert(\"Camerra not allowerd\", \"enable it to access\", [{\n              text: \"okay\"\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeImageHandler = function takeImageHandler() {\n    var hasPermission, image;\n    return _regeneratorRuntime.async(function takeImageHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              aspect: [16, 9],\n              quality: 0.5\n            }));\n\n          case 7:\n            image = _context2.sent;\n            setPickedImage(image.uri);\n            props.onImageTaken(image.uri);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var imagePicker = function imagePicker() {\n    var permission, image;\n    return _regeneratorRuntime.async(function imagePicker$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            permission = _context3.sent;\n\n            if (permission) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 5:\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(imagePicker.lauchCameraAsync({\n              allowEditing: true,\n              aspect: [16, 9],\n              quality: 0.5\n            }));\n\n          case 7:\n            image = _context3.sent;\n            setPickedImage(image.url);\n            props.onImageTaken(image.url);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.imagePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.imagePreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, !pickedImage ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"No image picked yet.\") : React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: pickedImage\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    title: \"Take Image\",\n    color: Colors.primary,\n    onPress: takeImageHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  imagePicker: {\n    alignItems: \"center\",\n    marginBottom: 15\n  },\n  imagePreview: {\n    width: \"100%\",\n    height: 200,\n    marginBottom: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#ccc\",\n    borderWidth: 1\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\nexport default ImgPicker;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/components/ImagePicker.js"],"names":["React","useState","ImagePicker","Permissions","MediaLibrary","Colors","ImgPicker","props","pickedImage","setPickedImage","verifyPermissions","requestPermissionsAsync","CameraRollPermissionResponse","reponse","status","Alert","alert","text","takeImageHandler","hasPermission","launchCameraAsync","allowsEditing","aspect","quality","image","uri","onImageTaken","imagePicker","permission","lauchCameraAsync","allowEditing","url","styles","imagePreview","primary","StyleSheet","create","alignItems","marginBottom","width","height","justifyContent","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Button, Image, Text, StyleSheet, Alert } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as MediaLibrary from 'expo-media-library'\n\nimport Colors from \"../constants/Colors\";\n\nconst ImgPicker = (props) => {\n  const [pickedImage, setPickedImage] = useState();\n\n  const verifyPermissions = async () => {\n    const reponse = await MediaLibrary.requestPermissionsAsync(\n      MediaLibrary.CameraRollPermissionResponse\n    );\n\n    if (reponse.status !== \"granted\") {\n      Alert.alert(\"Camerra not allowerd\", \"enable it to access\", [\n        { text: \"okay\" },\n      ]);\n      return false;\n    }\n    return true;\n  };\n\n  const takeImageHandler = async () => {\n    const hasPermission = await verifyPermissions();\n    if (!hasPermission) {\n      return;\n    }\n    const image = await ImagePicker.launchCameraAsync({\n      allowsEditing: true,\n      aspect: [16, 9],\n      quality: 0.5,\n    });\n\n    setPickedImage(image.uri);\n    props.onImageTaken(image.uri);\n  };\n\n  const imagePicker = async () => {\n    const permission = await verifyPermissions();\n    if (!permission) return;\n\n    const image = await imagePicker.lauchCameraAsync({\n      allowEditing: true,\n      aspect: [16, 9],\n      quality: 0.5,\n    });\n\n    setPickedImage(image.url);\n    props.onImageTaken(image.url);\n  };\n\n  return (\n    <View style={styles.imagePicker}>\n      <View style={styles.imagePreview}>\n        {!pickedImage ? (\n          <Text>No image picked yet.</Text>\n        ) : (\n          <Image style={styles.image} source={{ uri: pickedImage }} />\n        )}\n      </View>\n      <Button\n        title='Take Image'\n        color={Colors.primary}\n        onPress={takeImageHandler}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imagePicker: {\n    alignItems: \"center\",\n    marginBottom: 15,\n  },\n  imagePreview: {\n    width: \"100%\",\n    height: 200,\n    marginBottom: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n});\n\nexport default ImgPicker;\n"]},"metadata":{},"sourceType":"module"}