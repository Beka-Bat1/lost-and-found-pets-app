{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNative\\\\test\\\\components\\\\LocationPicker.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Location from 'expo-location';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport Colors from \"../constants/Colors\";\nimport MapPreview from \"./MapPreview\";\n\nvar LocationPicker = function LocationPicker(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFetching = _useState2[0],\n      setIsFetching = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickedLocation = _useState4[0],\n      setPickedLocation = _useState4[1];\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var onLocationPicked = props.onLocationPicked,\n      _props$mapPickedLocat = props.mapPickedLocation,\n      mapPickedLocation = _props$mapPickedLocat === void 0 ? {\n    lat: 37,\n    lng: 38\n  } : _props$mapPickedLocat;\n\n  var verifyPermissions = function verifyPermissions() {\n    var result;\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n          case 2:\n            result = _context.sent;\n\n            if (!(result.status !== 'granted')) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert('Insufficient permissions!', 'You need to grant location permissions to use this app.', [{\n              text: 'Okay'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getLocationHandler = function getLocationHandler() {\n    var hasPermission, location;\n    return _regeneratorRuntime.async(function getLocationHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.prev = 5;\n            setIsFetching(true);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n              timeout: 5000\n            }));\n\n          case 9:\n            location = _context2.sent;\n            setPickedLocation({\n              lat: location.coords.latitude,\n              lng: location.coords.longitude\n            });\n            onLocationPicked({\n              lat: location.coords.latitude,\n              lng: location.coords.longitude\n            });\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](5);\n            Alert.alert('Could not fetch location!', 'Please try again later or pick a location on the map.', [{\n              text: 'Okay'\n            }]);\n\n          case 17:\n            setIsFetching(false);\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 14]], Promise);\n  };\n\n  var pickOnMapHandler = function pickOnMapHandler() {\n    navigate('Map', {});\n  };\n\n  return React.createElement(View, {\n    style: styles.locationPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(MapPreview, {\n    style: styles.mapPreview,\n    location: mapPickedLocation,\n    onPress: pickOnMapHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, isFetching ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"No location chosen yet!\")), React.createElement(View, {\n    style: styles.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Get User Location\",\n    color: Colors.primary,\n    onPress: getLocationHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Pick on Map\",\n    color: Colors.primary,\n    onPress: pickOnMapHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  locationPicker: {\n    marginBottom: 15\n  },\n  mapPreview: {\n    marginBottom: 10,\n    width: '100%',\n    height: 150,\n    borderColor: '#ccc',\n    borderWidth: 1\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%'\n  }\n});\nexport default LocationPicker;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/components/LocationPicker.js"],"names":["React","useState","useEffect","Location","useNavigation","useRoute","Colors","MapPreview","LocationPicker","props","isFetching","setIsFetching","pickedLocation","setPickedLocation","navigate","onLocationPicked","mapPickedLocation","lat","lng","verifyPermissions","Permissions","askAsync","LOCATION","result","status","Alert","alert","text","getLocationHandler","hasPermission","getCurrentPositionAsync","timeout","location","coords","latitude","longitude","pickOnMapHandler","styles","locationPicker","mapPreview","primary","actions","StyleSheet","create","marginBottom","width","height","borderColor","borderWidth","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Button,\n  Text,\n  ActivityIndicator,\n  Alert,\n  StyleSheet\n} from 'react-native';\nimport * as Location from 'expo-location';\n// import * as Permissions from 'expo-permissions';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\n\nimport Colors from '../constants/Colors';\nimport MapPreview from './MapPreview';  \n\nconst LocationPicker = props => {\n  const [isFetching, setIsFetching] = useState(false);\n  const [pickedLocation, setPickedLocation] = useState();\n   \n  const { navigate } = useNavigation();\n\n  const { onLocationPicked, mapPickedLocation = {lat: 37, lng: 38} } = props; \n\n  // const mapPickedLocation = params?.mapPickedLocation ?? 'defaultValue';\n\n\n  \n\n\n  // useEffect(() => {\n  //   if (mapPickedLocation) {\n  //     // setPickedLocation(mapPickedLocation);\n  //     // onLocationPicked(mapPickedLocation);\n  //   }\n  // }, [mapPickedLocation, onLocationPicked]);\n\n  const verifyPermissions = async () => {\n    const result = await Permissions.askAsync(Permissions.LOCATION);\n    if (result.status !== 'granted') {\n      Alert.alert(\n        'Insufficient permissions!',\n        'You need to grant location permissions to use this app.',\n        [{ text: 'Okay' }]\n      );\n      return false;\n    }\n    return true;\n  };\n\n  const getLocationHandler = async () => {\n    const hasPermission = await verifyPermissions();\n    if (!hasPermission) {\n      return;\n    }\n\n    try {\n      setIsFetching(true);\n      const location = await Location.getCurrentPositionAsync({\n        timeout: 5000\n      });\n      setPickedLocation({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      });\n      onLocationPicked({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      });\n    } catch (err) {\n      Alert.alert(\n        'Could not fetch location!',\n        'Please try again later or pick a location on the map.',\n        [{ text: 'Okay' }]\n      );\n    }\n    setIsFetching(false);\n  };\n\n  const pickOnMapHandler = () => {\n    navigate('Map',{});\n  };\n\n  return (\n    <View style={styles.locationPicker}>\n      <MapPreview\n        style={styles.mapPreview}\n        location={mapPickedLocation}\n        onPress={pickOnMapHandler}\n      >\n        {isFetching ? (\n          <ActivityIndicator size=\"large\" color={Colors.primary} />\n        ) : (\n          <Text>No location chosen yet!</Text>\n        )}\n      </MapPreview>\n      <View style={styles.actions}>\n        <Button\n          title=\"Get User Location\"\n          color={Colors.primary}\n          onPress={getLocationHandler}\n        />\n        <Button\n          title=\"Pick on Map\"\n          color={Colors.primary}\n          onPress={pickOnMapHandler}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  locationPicker: {\n    marginBottom: 15\n  },\n  mapPreview: {\n    marginBottom: 10,\n    width: '100%',\n    height: 150,\n    borderColor: '#ccc',\n    borderWidth: 1\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%'\n  }\n});\n\nexport default LocationPicker;\n"]},"metadata":{},"sourceType":"module"}