{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNative\\\\test\\\\screens\\\\PlaceDetailScreen.js\";\n\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from 'react-redux';\nimport MapPreview from \"../components/MapPreview\";\nimport Colors from \"../constants/Colors\";\n\nvar PlaceDetailScreen = function PlaceDetailScreen(props) {\n  var placeId = props.navigation.params.placeId;\n  var selectedPlace = useSelector(function (state) {\n    return state.places.places.find(function (place) {\n      return place.id === placeId;\n    });\n  });\n  var selectedLocation = {\n    lat: selectedPlace.lat,\n    lng: selectedPlace.lng\n  };\n\n  var showMapHandler = function showMapHandler() {\n    props.navigation.navigate('Map', {\n      readonly: true,\n      initialLocation: selectedLocation\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: selectedPlace.imageUri\n    },\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.locationContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.addressContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, selectedPlace.address)), React.createElement(MapPreview, {\n    style: styles.mapPreview,\n    location: selectedLocation,\n    onPress: showMapHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n};\n\nPlaceDetailScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: navData.navigation.getParam('placeTitle')\n  };\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    height: '35%',\n    minHeight: 300,\n    width: '100%',\n    backgroundColor: '#ccc'\n  },\n  locationContainer: {\n    marginVertical: 20,\n    width: '90%',\n    maxWidth: 350,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 5,\n    backgroundColor: 'white',\n    borderRadius: 10\n  },\n  addressContainer: {\n    padding: 20\n  },\n  address: {\n    color: Colors.primary,\n    textAlign: 'center'\n  },\n  mapPreview: {\n    width: '100%',\n    maxWidth: 350,\n    height: 300,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10\n  }\n});\nexport default PlaceDetailScreen;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/screens/PlaceDetailScreen.js"],"names":["React","useSelector","MapPreview","Colors","PlaceDetailScreen","props","placeId","navigation","params","selectedPlace","state","places","find","place","id","selectedLocation","lat","lng","showMapHandler","navigate","readonly","initialLocation","alignItems","uri","imageUri","styles","image","locationContainer","addressContainer","address","mapPreview","navigationOptions","navData","headerTitle","getParam","StyleSheet","create","height","minHeight","width","backgroundColor","marginVertical","maxWidth","justifyContent","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","borderRadius","padding","color","primary","textAlign","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ScrollView, Image, View, Text, StyleSheet } from 'react-native';\nimport { useSelector } from 'react-redux';\n\nimport MapPreview from '../components/MapPreview';\nimport Colors from '../constants/Colors';\n\nconst PlaceDetailScreen = props => {\n  const placeId = props.navigation.params.placeId;\n  const selectedPlace = useSelector(state =>\n    state.places.places.find(place => place.id === placeId)\n  );\n\n  const selectedLocation = { lat: selectedPlace.lat, lng: selectedPlace.lng };\n\n  const showMapHandler = () => {\n    props.navigation.navigate('Map', {\n      readonly: true,\n      initialLocation: selectedLocation\n    });\n  };\n\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: 'center' }}>\n      <Image source={{ uri: selectedPlace.imageUri }} style={styles.image} />\n      <View style={styles.locationContainer}>\n        <View style={styles.addressContainer}>\n          <Text style={styles.address}>{selectedPlace.address}</Text>\n        </View>\n        <MapPreview\n          style={styles.mapPreview}\n          location={selectedLocation}\n          onPress={showMapHandler}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nPlaceDetailScreen.navigationOptions = navData => {\n  return {\n    headerTitle: navData.navigation.getParam('placeTitle')\n  };\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    height: '35%',\n    minHeight: 300,\n    width: '100%',\n    backgroundColor: '#ccc'\n  },\n  locationContainer: {\n    marginVertical: 20,\n    width: '90%',\n    maxWidth: 350,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 5,\n    backgroundColor: 'white',\n    borderRadius: 10\n  },\n  addressContainer: {\n    padding: 20\n  },\n  address: {\n    color: Colors.primary,\n    textAlign: 'center'\n  },\n  mapPreview: {\n    width: '100%',\n    maxWidth: 350,\n    height: 300,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10\n  }\n});\n\nexport default PlaceDetailScreen;\n"]},"metadata":{},"sourceType":"module"}