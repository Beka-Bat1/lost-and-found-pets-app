{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var signUp = function signUp(email, password) {\n  return function _callee(dispatch) {\n    var response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            debugger;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=AIzaSyCMCH-brUV4-ltdKG3MYL0u7whCLp-p7Dc', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stirnigy({\n                email: email,\n                password: password,\n                returnSecureToken: true\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (repsonse.ok) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error(response.message);\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            resData = _context.sent;\n            console.log(resData);\n            dispatch({\n              type: 'SIGNUP',\n              payload: null\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var signIn = function signIn(email, password) {\n  return function _callee2(dispatch) {\n    var response, resData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=AIzaSyCMCH-brUV4-ltdKG3MYL0u7whCLp-p7Dc', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stirnigy({\n                email: email,\n                password: password,\n                returnSecureToken: true\n              })\n            }));\n\n          case 2:\n            response = _context2.sent;\n\n            if (repsonse.ok) {\n              _context2.next = 5;\n              break;\n            }\n\n            throw new Error(response.message);\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            resData = _context2.sent;\n            console.log(resData);\n            dispatch({\n              type: 'SIGNUP',\n              payload: resData\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/context/actions.js"],"names":["signUp","email","password","dispatch","fetch","method","headers","body","JSON","stirnigy","returnSecureToken","response","repsonse","ok","Error","message","json","resData","console","log","type","payload","signIn"],"mappings":";AAEA,OAAO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACvC,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AADG;AAAA,6CAGoBC,KAAK,CAAC,sHAAD,EAC5B;AACIC,cAAAA,MAAM,EAAE,MADZ;AAEIC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFb;AAKIC,cAAAA,IAAI,EAAEC,IAAI,CAACC,QAAL,CAAc;AAChBR,gBAAAA,KAAK,EAAEA,KADS;AAEhBC,gBAAAA,QAAQ,EAAEA,QAFM;AAGhBQ,gBAAAA,iBAAiB,EAAE;AAHH,eAAd;AALV,aAD4B,CAHzB;;AAAA;AAGGC,YAAAA,QAHH;;AAAA,gBAgBCC,QAAQ,CAACC,EAhBV;AAAA;AAAA;AAAA;;AAAA,kBAiBO,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAjBP;;AAAA;AAAA;AAAA,6CAoBmBJ,QAAQ,CAACK,IAAT,EApBnB;;AAAA;AAoBGC,YAAAA,OApBH;AAqBHC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAd,YAAAA,QAAQ,CAAC;AAAEiB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAAR;;AAvBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAyBH,CA1BM;AA8BP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACrB,KAAD,EAAQC,QAAR,EAAqB;AACvC,SAAO,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACoBC,KAAK,CAAC,sHAAD,EAC5B;AACIC,cAAAA,MAAM,EAAE,MADZ;AAEIC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFb;AAKIC,cAAAA,IAAI,EAAEC,IAAI,CAACC,QAAL,CAAc;AAChBR,gBAAAA,KAAK,EAAEA,KADS;AAEhBC,gBAAAA,QAAQ,EAAEA,QAFM;AAGhBQ,gBAAAA,iBAAiB,EAAE;AAHH,eAAd;AALV,aAD4B,CADzB;;AAAA;AACGC,YAAAA,QADH;;AAAA,gBAcCC,QAAQ,CAACC,EAdV;AAAA;AAAA;AAAA;;AAAA,kBAeO,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAfP;;AAAA;AAAA;AAAA,6CAkBmBJ,QAAQ,CAACK,IAAT,EAlBnB;;AAAA;AAkBGC,YAAAA,OAlBH;AAoBHC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAd,YAAAA,QAAQ,CAAC;AAAEiB,cAAAA,IAAI,EAAE,QAAR;AAAkBC,cAAAA,OAAO,EAAEJ;AAA3B,aAAD,CAAR;;AAtBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAyBH,CA1BM","sourcesContent":["\r\n\r\nexport const signUp = (email, password) => {\r\n    return async dispatch => {\r\n        debugger\r\n        \r\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=AIzaSyCMCH-brUV4-ltdKG3MYL0u7whCLp-p7Dc',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stirnigy({\r\n                email: email,\r\n                password: password,\r\n                returnSecureToken: true,\r\n            })\r\n        })\r\n\r\n        if(!repsonse.ok){\r\n            throw new Error(response.message)\r\n        }\r\n\r\n        const resData = await response.json()\r\n        console.log(resData)\r\n\r\n        dispatch({ type: 'SIGNUP', payload: null})\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const signIn = (email, password) => {\r\n    return async dispatch => {\r\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=AIzaSyCMCH-brUV4-ltdKG3MYL0u7whCLp-p7Dc',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stirnigy({\r\n                email: email,\r\n                password: password,\r\n                returnSecureToken: true,\r\n            })\r\n        })\r\n\r\n        if(!repsonse.ok){\r\n            throw new Error(response.message)\r\n        }\r\n\r\n        const resData = await response.json()\r\n\r\n        console.log(resData)\r\n\r\n        dispatch({ type: 'SIGNUP', payload: resData})\r\n\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}