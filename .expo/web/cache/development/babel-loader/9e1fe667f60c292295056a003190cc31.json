{"ast":null,"code":"import { ADD_PLACE, SET_PLACES } from \"./places-actions\";\nimport Place from \"../models/place\";\nvar initialState = {\n  places: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_PLACES:\n      return {\n        places: action.places.map(function (pl) {\n          return new Place(pl.id.toString(), pl.title, pl.imageUri, pl.address, pl.lat, pl.lng);\n        })\n      };\n\n    case ADD_PLACE:\n      var newPlace = new Place(action.placeData.id.toString(), action.placeData.title, action.placeData.image, action.placeData.address, action.placeData.coords.lat, action.placeData.coords.lng);\n      return {\n        places: state.places.concat(newPlace)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/store/places-reducer.js"],"names":["ADD_PLACE","SET_PLACES","Place","initialState","places","state","action","type","map","pl","id","toString","title","imageUri","address","lat","lng","newPlace","placeData","image","coords","concat"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB;AACA,OAAOC,KAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,UAAL;AACE,aAAO;AACLG,QAAAA,MAAM,EAAEE,MAAM,CAACF,MAAP,CAAcI,GAAd,CACN,UAAAC,EAAE;AAAA,iBACA,IAAIP,KAAJ,CACEO,EAAE,CAACC,EAAH,CAAMC,QAAN,EADF,EAEEF,EAAE,CAACG,KAFL,EAGEH,EAAE,CAACI,QAHL,EAIEJ,EAAE,CAACK,OAJL,EAKEL,EAAE,CAACM,GALL,EAMEN,EAAE,CAACO,GANL,CADA;AAAA,SADI;AADH,OAAP;;AAaF,SAAKhB,SAAL;AACE,UAAMiB,QAAQ,GAAG,IAAIf,KAAJ,CACfI,MAAM,CAACY,SAAP,CAAiBR,EAAjB,CAAoBC,QAApB,EADe,EAEfL,MAAM,CAACY,SAAP,CAAiBN,KAFF,EAGfN,MAAM,CAACY,SAAP,CAAiBC,KAHF,EAIfb,MAAM,CAACY,SAAP,CAAiBJ,OAJF,EAKfR,MAAM,CAACY,SAAP,CAAiBE,MAAjB,CAAwBL,GALT,EAMfT,MAAM,CAACY,SAAP,CAAiBE,MAAjB,CAAwBJ,GANT,CAAjB;AAQA,aAAO;AACLZ,QAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAaiB,MAAb,CAAoBJ,QAApB;AADH,OAAP;;AAGF;AACE,aAAOZ,KAAP;AA5BJ;AA8BD,CA/BD","sourcesContent":["import { ADD_PLACE, SET_PLACES } from './places-actions';\nimport Place from '../models/place';\n\nconst initialState = {\n  places: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PLACES:\n      return {\n        places: action.places.map(\n          pl =>\n            new Place(\n              pl.id.toString(),\n              pl.title,\n              pl.imageUri,\n              pl.address,\n              pl.lat,\n              pl.lng\n            )\n        )\n      };\n    case ADD_PLACE:\n      const newPlace = new Place(\n        action.placeData.id.toString(),\n        action.placeData.title,\n        action.placeData.image,\n        action.placeData.address,\n        action.placeData.coords.lat,\n        action.placeData.coords.lng\n      );\n      return {\n        places: state.places.concat(newPlace)\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}