{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNative\\\\test\\\\config\\\\AuthStack.js\";\n\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"../screens//Login\";\nimport SignUp from \"../screens/SignUp\";\nimport { useNavigation } from \"@react-navigation/native\";\nvar Stack = createStackNavigator();\n\nvar AuthStack = function AuthStack() {\n  var _useContext = useContext(AuthContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogedIn = _useState2[0],\n      setIsLodgedIn = _useState2[1];\n\n  var _useNavigation = useNavigation(),\n      replace = _useNavigation.replace;\n\n  useEffect(function () {\n    setIsLodgedIn(state.authenticated);\n\n    if (isLogedIn) {\n      replace(\"Stack\");\n    }\n  }, [state]);\n  return React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AuthStack;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/config/AuthStack.js"],"names":["React","createStackNavigator","Login","SignUp","useNavigation","Stack","AuthStack","useContext","AuthContext","state","dispatch","useState","isLogedIn","setIsLodgedIn","replace","useEffect","authenticated"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;;AACA,IAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,oBAA4BC,UAAU,CAACC,WAAD,CAAtC;AAAA,MAAQC,KAAR,eAAQA,KAAR;AAAA,MAAeC,QAAf,eAAeA,QAAf;;AACA,kBAAmCC,QAAQ,CAAC,KAAD,CAA3C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,aAAlB;;AACA,uBAAoBT,aAAa,EAAjC;AAAA,MAAQU,OAAR,kBAAQA,OAAR;;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,aAAa,CAACJ,KAAK,CAACO,aAAP,CAAb;;AACA,QAAIJ,SAAJ,EAAe;AACbE,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD;AACF,GALQ,EAKN,CAACL,KAAD,CALM,CAAT;AAOA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEP,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAlBD;;AAoBA,eAAeG,SAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport Login from \"../screens//Login\";\r\nimport SignUp from \"../screens/SignUp\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst Stack = createStackNavigator();\r\nconst AuthStack = () => {\r\n  const { state, dispatch } = useContext(AuthContext);\r\n  const [isLogedIn, setIsLodgedIn] = useState(false);\r\n  const { replace } = useNavigation();\r\n\r\n  useEffect(() => {\r\n    setIsLodgedIn(state.authenticated);\r\n    if (isLogedIn) {\r\n      replace(\"Stack\");\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name='Login' component={Login} />\r\n      <Stack.Screen name='SignUp' component={SignUp} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default AuthStack;\r\n"]},"metadata":{},"sourceType":"module"}