{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNative\\\\test\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useReducer } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport Navigaton from \"./config/RootStack\";\nimport AuthContextProvider from \"./context/AuthContext\";\nimport NewPlaceScreen from \"./screens/NewPlaceScreen\";\nimport placesReducer from \"./store/places-reducer\";\nimport { init } from \"./helpers/db\";\ninit().then(function () {\n  console.log('Initialized database');\n}).catch(function (err) {\n  console.log('Initializing db failed.');\n  console.log(err);\n});\nvar rootReducer = combineReducers({\n  places: placesReducer\n});\nvar store = createStore(rootReducer, applyMiddleware(ReduxThunk));\nexport default function App() {\n  return React.createElement(AuthContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }\n  }, React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Navigaton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/App.js"],"names":["StatusBar","React","useReducer","createStore","combineReducers","applyMiddleware","Provider","ReduxThunk","Navigaton","AuthContextProvider","NewPlaceScreen","placesReducer","init","then","console","log","catch","err","rootReducer","places","store","App","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAGA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,SAAP;AACA,OAAOC,mBAAP;AAEA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,SAASC,IAAT;AAGAA,IAAI,GACDC,IADH,CACQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,CAHH,EAIGC,KAJH,CAIS,UAAAC,GAAG,EAAI;AACZH,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,CAPH;AASA,IAAMC,WAAW,GAAGd,eAAe,CAAC;AAClCe,EAAAA,MAAM,EAAER;AAD0B,CAAD,CAAnC;AAIA,IAAMS,KAAK,GAAGjB,WAAW,CAACe,WAAD,EAAcb,eAAe,CAACE,UAAD,CAA7B,CAAzB;AAGA,eAAe,SAASc,GAAT,GAAe;AAC5B,SACG,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADC,CADH;AAOD;AAED,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useReducer } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\n\nimport Navigaton from \"./config/RootStack\";\nimport AuthContextProvider from \"./context/AuthContext\";\n\nimport NewPlaceScreen from \"./screens/NewPlaceScreen\";\nimport placesReducer from './store/places-reducer';\nimport { init } from './helpers/db';\n\n\ninit()\n  .then(() => {\n    console.log('Initialized database');\n  })\n  .catch(err => {\n    console.log('Initializing db failed.');\n    console.log(err);\n  });\n\nconst rootReducer = combineReducers({\n  places: placesReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\n\nexport default function App() {\n  return (\n     <AuthContextProvider> \n    <Provider store={store}>\n       <Navigaton /> \n    </Provider>\n    </AuthContextProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}