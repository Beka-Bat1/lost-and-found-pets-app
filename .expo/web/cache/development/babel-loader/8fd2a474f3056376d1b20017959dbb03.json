{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNative\\\\test\\\\screens\\\\PlacesListScreen.js\";\n\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigation } from '@react-navigation/native';\nimport HeaderButton from \"../components/HeaderButton\";\nimport PlaceItem from \"../components/PlaceItem\";\nimport * as placesActions from \"../store/places-actions\";\n\nvar PlacesListScreen = function PlacesListScreen(props) {\n  var places = useSelector(function (state) {\n    return state.places.places;\n  });\n  var dispatch = useDispatch();\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  useEffect(function () {\n    dispatch(placesActions.loadPlaces());\n  }, [dispatch]);\n  return React.createElement(FlatList, {\n    data: places,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(PlaceItem, {\n        image: itemData.item.imageUri,\n        title: itemData.item.title,\n        address: itemData.item.address,\n        onSelect: function onSelect() {\n          navigate('PlaceDetail', {\n            placeTitle: itemData.item.title,\n            placeId: itemData.item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\n\nPlacesListScreen.navigationOptions = function (navData) {\n  var _useNavigation2 = useNavigation(),\n      navigate = _useNavigation2.navigate;\n\n  return {\n    headerTitle: 'All Places',\n    headerRight: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Add Place\",\n      iconName: Platform.OS === 'android' ? 'md-add' : 'ios-add',\n      onPress: function onPress() {\n        navigate('NewPlace');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({});\nexport default PlacesListScreen;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNative/test/screens/PlacesListScreen.js"],"names":["React","useEffect","HeaderButtons","Item","useSelector","useDispatch","useNavigation","HeaderButton","PlaceItem","placesActions","PlacesListScreen","props","places","state","dispatch","navigate","loadPlaces","item","id","itemData","imageUri","title","address","placeTitle","placeId","navigationOptions","navData","headerTitle","headerRight","Platform","OS","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,iCAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAOC,YAAP;AACA,OAAOC,SAAP;AACA,OAAO,KAAKC,aAAZ;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAChC,MAAMC,MAAM,GAAGR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACD,MAAN,CAAaA,MAAjB;AAAA,GAAN,CAA1B;AACA,MAAME,QAAQ,GAAGT,WAAW,EAA5B;;AACA,uBAAqBC,aAAa,EAAlC;AAAA,MAAQS,QAAR,kBAAQA,QAAR;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,QAAQ,CAACL,aAAa,CAACO,UAAd,EAAD,CAAR;AACD,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,MADR;AAEE,IAAA,YAAY,EAAE,sBAAAK,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAT;AAAA,KAFpB;AAGE,IAAA,UAAU,EAAE,oBAAAC,QAAQ;AAAA,aAClB,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEA,QAAQ,CAACF,IAAT,CAAcG,QADvB;AAEE,QAAA,KAAK,EAAED,QAAQ,CAACF,IAAT,CAAcI,KAFvB;AAGE,QAAA,OAAO,EAAEF,QAAQ,CAACF,IAAT,CAAcK,OAHzB;AAIE,QAAA,QAAQ,EAAE,oBAAM;AACdP,UAAAA,QAAQ,CAAC,aAAD,EAAgB;AACtBQ,YAAAA,UAAU,EAAEJ,QAAQ,CAACF,IAAT,CAAcI,KADJ;AAEtBG,YAAAA,OAAO,EAAEL,QAAQ,CAACF,IAAT,CAAcC;AAFD,WAAhB,CAAR;AAID,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkB;AAAA,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAmBD,CA5BD;;AA8BAR,gBAAgB,CAACe,iBAAjB,GAAqC,UAAAC,OAAO,EAAI;AAC9C,wBAAqBpB,aAAa,EAAlC;AAAA,MAAQS,QAAR,mBAAQA,QAAR;;AAEA,SAAO;AACLY,IAAAA,WAAW,EAAE,YADR;AAELC,IAAAA,WAAW,EACT,oBAAC,aAAD;AAAe,MAAA,qBAAqB,EAAErB,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,QAAQ,EAAEsB,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,QAA5B,GAAuC,SAFnD;AAGE,MAAA,OAAO,EAAE,mBAAM;AACbf,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAHG,GAAP;AAcD,CAjBD;;AAmBA,IAAMgB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAevB,gBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { View, Text, StyleSheet, Platform, FlatList } from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useNavigation } from '@react-navigation/native'\n\nimport HeaderButton from '../components/HeaderButton';\nimport PlaceItem from '../components/PlaceItem';\nimport * as placesActions from '../store/places-actions';\n\nconst PlacesListScreen = props => {\n  const places = useSelector(state => state.places.places);\n  const dispatch = useDispatch();\n  const { navigate } = useNavigation()\n\n  useEffect(() => {\n    dispatch(placesActions.loadPlaces());\n  }, [dispatch]);\n\n  return (\n    <FlatList\n      data={places}\n      keyExtractor={item => item.id}\n      renderItem={itemData => (\n        <PlaceItem\n          image={itemData.item.imageUri}\n          title={itemData.item.title}\n          address={itemData.item.address}\n          onSelect={() => {\n            navigate('PlaceDetail', {\n              placeTitle: itemData.item.title,\n              placeId: itemData.item.id\n            });\n          }}\n        />\n      )}\n    />\n  );\n};\n\nPlacesListScreen.navigationOptions = navData => {\n  const { navigate } = useNavigation();\n  \n  return {\n    headerTitle: 'All Places',\n    headerRight: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Add Place\"\n          iconName={Platform.OS === 'android' ? 'md-add' : 'ios-add'}\n          onPress={() => {\n            navigate('NewPlace');\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({});\n\nexport default PlacesListScreen;\n"]},"metadata":{},"sourceType":"module"}